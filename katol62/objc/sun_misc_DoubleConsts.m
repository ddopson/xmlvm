
// Automatically generated by xmlvm2obj. Do not edit!


#import "sun_misc_DoubleConsts.h"
#import "org_xmlvm_iphone_NSObject.h"

double _STATIC_sun_misc_DoubleConsts_POSITIVE_INFINITY = INFINITY;
double _STATIC_sun_misc_DoubleConsts_NEGATIVE_INFINITY = -INFINITY;
double _STATIC_sun_misc_DoubleConsts_NaN = NAN;
double _STATIC_sun_misc_DoubleConsts_MAX_VALUE = 1.7976931348623157E308;
double _STATIC_sun_misc_DoubleConsts_MIN_VALUE = 4.9E-324;
double _STATIC_sun_misc_DoubleConsts_MIN_NORMAL = 2.2250738585072014E-308;
int _STATIC_sun_misc_DoubleConsts_SIGNIFICAND_WIDTH = 53;
int _STATIC_sun_misc_DoubleConsts_MAX_EXPONENT = 1023;
int _STATIC_sun_misc_DoubleConsts_MIN_EXPONENT = -1022;
int _STATIC_sun_misc_DoubleConsts_MIN_SUB_EXPONENT = -1074;
int _STATIC_sun_misc_DoubleConsts_EXP_BIAS = 1023;
JAVA_LONG _STATIC_sun_misc_DoubleConsts_SIGN_BIT_MASK = -9223372036854775808;
JAVA_LONG _STATIC_sun_misc_DoubleConsts_EXP_BIT_MASK = 9218868437227405312;
JAVA_LONG _STATIC_sun_misc_DoubleConsts_SIGNIF_BIT_MASK = 4503599627370495;

@implementation sun_misc_DoubleConsts;

+ (void) initialize
{
    if (strcmp(class_getName(self), "sun_misc_DoubleConsts") == 0) {
        [sun_misc_DoubleConsts __clinit_sun_misc_DoubleConsts];
    }
}

- (id) init
{
    if (self = [super init]) {
    }
    return self;
}

- (void) dealloc
{
    if (strcmp(object_getClassName(self), "sun_misc_DoubleConsts") == 0) {
        [self dealloc__];
    }
    [super dealloc];
}

+ (double) _GET_POSITIVE_INFINITY
{
    return _STATIC_sun_misc_DoubleConsts_POSITIVE_INFINITY;
}

+ (void) _PUT_POSITIVE_INFINITY: (double) v
{
    _STATIC_sun_misc_DoubleConsts_POSITIVE_INFINITY = v;
}

+ (double) _GET_NEGATIVE_INFINITY
{
    return _STATIC_sun_misc_DoubleConsts_NEGATIVE_INFINITY;
}

+ (void) _PUT_NEGATIVE_INFINITY: (double) v
{
    _STATIC_sun_misc_DoubleConsts_NEGATIVE_INFINITY = v;
}

+ (double) _GET_NaN
{
    return _STATIC_sun_misc_DoubleConsts_NaN;
}

+ (void) _PUT_NaN: (double) v
{
    _STATIC_sun_misc_DoubleConsts_NaN = v;
}

+ (double) _GET_MAX_VALUE
{
    return _STATIC_sun_misc_DoubleConsts_MAX_VALUE;
}

+ (void) _PUT_MAX_VALUE: (double) v
{
    _STATIC_sun_misc_DoubleConsts_MAX_VALUE = v;
}

+ (double) _GET_MIN_VALUE
{
    return _STATIC_sun_misc_DoubleConsts_MIN_VALUE;
}

+ (void) _PUT_MIN_VALUE: (double) v
{
    _STATIC_sun_misc_DoubleConsts_MIN_VALUE = v;
}

+ (double) _GET_MIN_NORMAL
{
    return _STATIC_sun_misc_DoubleConsts_MIN_NORMAL;
}

+ (void) _PUT_MIN_NORMAL: (double) v
{
    _STATIC_sun_misc_DoubleConsts_MIN_NORMAL = v;
}

+ (int) _GET_SIGNIFICAND_WIDTH
{
    return _STATIC_sun_misc_DoubleConsts_SIGNIFICAND_WIDTH;
}

+ (void) _PUT_SIGNIFICAND_WIDTH: (int) v
{
    _STATIC_sun_misc_DoubleConsts_SIGNIFICAND_WIDTH = v;
}

+ (int) _GET_MAX_EXPONENT
{
    return _STATIC_sun_misc_DoubleConsts_MAX_EXPONENT;
}

+ (void) _PUT_MAX_EXPONENT: (int) v
{
    _STATIC_sun_misc_DoubleConsts_MAX_EXPONENT = v;
}

+ (int) _GET_MIN_EXPONENT
{
    return _STATIC_sun_misc_DoubleConsts_MIN_EXPONENT;
}

+ (void) _PUT_MIN_EXPONENT: (int) v
{
    _STATIC_sun_misc_DoubleConsts_MIN_EXPONENT = v;
}

+ (int) _GET_MIN_SUB_EXPONENT
{
    return _STATIC_sun_misc_DoubleConsts_MIN_SUB_EXPONENT;
}

+ (void) _PUT_MIN_SUB_EXPONENT: (int) v
{
    _STATIC_sun_misc_DoubleConsts_MIN_SUB_EXPONENT = v;
}

+ (int) _GET_EXP_BIAS
{
    return _STATIC_sun_misc_DoubleConsts_EXP_BIAS;
}

+ (void) _PUT_EXP_BIAS: (int) v
{
    _STATIC_sun_misc_DoubleConsts_EXP_BIAS = v;
}

+ (JAVA_LONG) _GET_SIGN_BIT_MASK
{
    return _STATIC_sun_misc_DoubleConsts_SIGN_BIT_MASK;
}

+ (void) _PUT_SIGN_BIT_MASK: (JAVA_LONG) v
{
    _STATIC_sun_misc_DoubleConsts_SIGN_BIT_MASK = v;
}

+ (JAVA_LONG) _GET_EXP_BIT_MASK
{
    return _STATIC_sun_misc_DoubleConsts_EXP_BIT_MASK;
}

+ (void) _PUT_EXP_BIT_MASK: (JAVA_LONG) v
{
    _STATIC_sun_misc_DoubleConsts_EXP_BIT_MASK = v;
}

+ (JAVA_LONG) _GET_SIGNIF_BIT_MASK
{
    return _STATIC_sun_misc_DoubleConsts_SIGNIF_BIT_MASK;
}

+ (void) _PUT_SIGNIF_BIT_MASK: (JAVA_LONG) v
{
    _STATIC_sun_misc_DoubleConsts_SIGNIF_BIT_MASK = v;
}

- (void) __init_sun_misc_DoubleConsts__
{
    XMLVMElem _r0;
    _r0.o = self;
    [_r0.o retain];
    [((java_lang_Object*) _r0.o) __init_java_lang_Object__];
    [_r0.o release];
    return;
}
+ (void) __clinit_sun_misc_DoubleConsts
{
    return;
}

@end

