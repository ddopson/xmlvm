#import "java_lang_Double.h"
#import "java_lang_Long.h"
#import "java_lang_RuntimeException.h"
#import "java_lang_String.h"
#import "java_lang_StringBuilder.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "pkg_BitwiseConversion.h"
#import "org_xmlvm_iphone_NSObject.h"


@implementation pkg_BitwiseConversion;

+ (void) initialize
{
    if (strcmp(class_getName(self), "pkg_BitwiseConversion") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
    }
    return self;
}

- (void) dealloc
{
    if (strcmp(object_getClassName(self), "pkg_BitwiseConversion") == 0) {
        [self dealloc__];
    }
    [super dealloc];
}

- (void) __init_pkg_BitwiseConversion__
{
    XMLVMElem _r0;
    _r0.o = self;
    [_r0.o retain];
    [((java_lang_Object*) _r0.o) __init_java_lang_Object__];
    [_r0.o release];
    return;
}
+ (void) testNanCase___long :(JAVA_LONG)n1
{
    XMLVMElem _rtmp;
    id        _ex = JAVA_NULL;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r7;
    XMLVMElem _r9;
    XMLVMElem _r10;
    XMLVMElem _r11;
    XMLVMElem _r13;
    XMLVMElem _r14;
    XMLVMElem _r15;
    _r11.l = n1;
    _r1.o = JAVA_NULL;
    _r2.o = JAVA_NULL;
    _r13.o = JAVA_NULL;
    _r14.o = JAVA_NULL;
    _r15.o = JAVA_NULL;
    _r10.i = 1;
    _r9.i = 0;
    _r0.l = 4503599627370495;
    _r0.l = _r0.l & _r11.l;
    _r2.i = 2;
    _r2.o = [XMLVMArray createSingleDimensionWithType:7 andSize:_r2.i];
    _r3.l = 9218868437227405312;
    _r3.l = _r3.l | _r0.l;
    _r3.d = [java_lang_Double longBitsToDouble___long:_r3.l];
    ((XMLVMArray*) _r2.o)->array.d[_r9.i] = _r3.d;
    _r3.l = -4503599627370496;
    _r3.l = _r3.l | _r0.l;
    _r3.d = [java_lang_Double longBitsToDouble___long:_r3.l];
    ((XMLVMArray*) _r2.o)->array.d[_r10.i] = _r3.d;
    _r3.i = [_r2.o count];
    _r4 = _r9;
    label31:;
    if (_r4.i >= _r3.i) goto label109;
    _r5.d = ((XMLVMArray*) _r2.o)->array.d[_r4.i];
    _r7.i = [java_lang_Double isNaN___double:_r5.d];
    if (_r7.i != 0) goto label76;
    [_r2.o release];
    _r2.o = [[java_lang_RuntimeException alloc] init];
    [_r14.o release];
    _r14.o = [[java_lang_StringBuilder alloc] init];
    [((java_lang_StringBuilder*) _r14.o) __init_java_lang_StringBuilder__];
    [_r15.o release];
    _r15.o = @"Invalid input ";
    _rtmp.o =  _r14.o;
    _r14.o = [((java_lang_StringBuilder*) _r14.o) append___java_lang_String:_r15.o];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    [_r13.o release];
    _r13.o = [((java_lang_StringBuilder*) _r14.o) append___long:_r0.l];
    [_r1.o release];
    _r1.o = @"yielded non-NaN";
    _rtmp.o =  _r13.o;
    _r13.o = [((java_lang_StringBuilder*) _r13.o) append___java_lang_String:_r1.o];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    _rtmp.o =  _r13.o;
    _r13.o = [((java_lang_StringBuilder*) _r13.o) append___double:_r5.d];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    _rtmp.o =  _r13.o;
    _r13.o = [((java_lang_StringBuilder*) _r13.o) toString__];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    [((java_lang_RuntimeException*) _r2.o) __init_java_lang_RuntimeException___java_lang_String:_r13.o];
    [_ex release];
    _ex = _r2.o;
   _r2.o = JAVA_NULL;
    @throw _ex;
      label76:;
    _r5.l = [java_lang_Double doubleToLongBits___double:_r5.d];
    _r7.l = 9221120237041090560;
    _r7.i = _r5.l > _r7.l ? 1 : (_r5.l == _r7.l ? 0 : -1);
    if (_r7.i == 0) goto label106;
    [_r13.o release];
    _r13.o = [[java_lang_RuntimeException alloc] init];
    [_r1.o release];
    _r1.o = @"Non-canoncial NaN bits returned: %x%n";
    [_r2.o release];
    _r2.o = [XMLVMArray createSingleDimensionWithType:0 andSize:_r10.i];
    [_r14.o release];
    _r14.o = [java_lang_Long valueOf___long:_r5.l];
    [((XMLVMArray*) _r2.o)->array.o[_r9.i] release];
    ((XMLVMArray*) _r2.o)->array.o[_r9.i] = _r14.o;
    [_r14.o retain];
    _rtmp.o =  _r1.o;
    _r1.o = [java_lang_String format___java_lang_String_java_lang_Object_ARRAYTYPE:_r1.o:_r2.o];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    [((java_lang_RuntimeException*) _r13.o) __init_java_lang_RuntimeException___java_lang_String:_r1.o];
    [_ex release];
    _ex = _r13.o;
   _r13.o = JAVA_NULL;
    @throw _ex;
      label106:;
    _r4.i = _r4.i + 1;
    goto label31;
    label109:;
    [_r1.o release];
    [_r2.o release];
    [_r13.o release];
    [_r14.o release];
    [_r15.o release];
    [_ex release];
    return;
}
+ (void) testmain___java_lang_String_ARRAYTYPE :(XMLVMArray*)n1
{
    id        _ex = JAVA_NULL;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    _r4.o = n1;
    _r0.o = JAVA_NULL;
    _r1.o = JAVA_NULL;
    [_r4.o retain];
    _r5.i = 0;
    label1:;
    _r6.i = 52;
    if (_r5.i >= _r6.i) goto label14;
    _r6.l = 1;
    _r6.l = _r6.l << (0x3f & _r5.l);
    [pkg_BitwiseConversion testNanCase___long:_r6.l];
    _r5.i = _r5.i + 1;
    goto label1;
    label14:;
    _r5.d = Infinity;
    _r5.l = [java_lang_Double doubleToLongBits___double:_r5.d];
    _r2.l = 9218868437227405312;
    _r5.i = _r5.l > _r2.l ? 1 : (_r5.l == _r2.l ? 0 : -1);
    if (_r5.i == 0) goto label34;
    _r0.o = [[java_lang_RuntimeException alloc] init];
    _r1.o = @"Bad conversion for +infinity.";
    [((java_lang_RuntimeException*) _r0.o) __init_java_lang_RuntimeException___java_lang_String:_r1.o];
    [_ex release];
    _ex = _r0.o;
   _r0.o = JAVA_NULL;
    @throw _ex;
      label34:;
    _r5.d = -Infinity;
    _r5.l = [java_lang_Double doubleToLongBits___double:_r5.d];
    _r2.l = -4503599627370496;
    _r5.i = _r5.l > _r2.l ? 1 : (_r5.l == _r2.l ? 0 : -1);
    if (_r5.i == 0) goto label54;
    [_r0.o release];
    _r0.o = [[java_lang_RuntimeException alloc] init];
    [_r1.o release];
    _r1.o = @"Bad conversion for -infinity.";
    [((java_lang_RuntimeException*) _r0.o) __init_java_lang_RuntimeException___java_lang_String:_r1.o];
    [_ex release];
    _ex = _r0.o;
   _r0.o = JAVA_NULL;
    @throw _ex;
      label54:;
    [_r0.o release];
    [_r1.o release];
    [_r4.o release];
    [_ex release];
    return;
}

@end

